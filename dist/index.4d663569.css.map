{"mappings":"AAGA;;;;;;;;;;;;;;AAmBA;;;;;;;AAOA;EACE;;;;;AAKF;;;;;;;;;;AAUA;;;;;;AAMA;;;;;AAMA;;;;;;AAMA;;;;;;;AAOA;EACE;;;;;AAKF;;;;;;;;;;;AAkBA;;;;;;AAMA;;;;;;;;;;;;AAgBA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAIA;;;;;;AAKA;;;;;;AAKA;;;;;;AAMA;;;;;;;AAOA;;;;AAIA;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;AAeA;;;;;AAIA;;;;;AAKA;;;;;;;AAOA;;;;;;;;;;;AAkBA;;;;;;AAKA;;;;;;;;AAOA;;;;AAOA;;;;;;;;;;AAaA;;;;;;AAMA;;;;;;AAMA;;;;;;;;;;;AAWA;;;;;AAIA;;;;;AAIA","sources":["src/styles.css"],"sourcesContent":["/*\n  Theme and global variables\n*/\nhtml {\n  overflow-y: scroll;\n\n  --game-spacing: 32px;\n  --header-height: 4rem;\n\n  --color-success: #41c986;\n  --color-warning: #f2da60;\n  --color-error: hsl(0deg 70% 45%);\n  --color-gray-100: hsl(0deg 0% 10%);\n  --color-gray-300: hsl(0deg 0% 25%);\n  --color-gray-500: hsl(0deg 0% 50%);\n  --color-gray-700: hsl(0deg 0% 75%);\n  --color-gray-900: hsl(0deg 0% 90%);\n}\n\n/*\n  Custom styles\n*/\nbody {\n  color: #ff5eb8;\n  font-weight: 700;\n  background-color: #ffe3f6;\n  font-family: 'Poppins', sans-serif;\n}\n\n@media (max-height: 600px) {\n  body {\n    --game-spacing: 8px;\n  }\n}\n\nbutton {\n  margin: 0;\n  padding: 0;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  text-align: left;\n  color: inherit;\n}\n\n.wrapper {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n}\n\nheader {\n  display: flex;\n  height: var(--header-height);\n  /* border-bottom: 1px solid var(--color-gray-700); */\n}\n\nheader .side {\n  width: var(--header-height);\n  display: grid;\n  place-content: center;\n}\n\nh1 {\n  flex: 1;\n  font-size: 2rem;\n  line-height: var(--header-height);\n  text-align: center;\n}\n\n@media (max-width: 25rem) {\n  h1 {\n    font-size: 1.25rem;\n  }\n}\n\n.game-wrapper {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: var(--game-spacing);\n  padding: 10px 0;\n  margin: 0 auto;\n  min-width: 250px;\n  max-width: min(400px, 40vh, 100%);\n}\n\n.guess-results {\n  /* flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; */\n}\n\n.guess {\n  display: flex;\n  gap: 4px;\n  margin-bottom: 4px;\n}\n\n.cell {\n    aspect-ratio: 1;\n    border: 4px solid var(--color-gray-900);\n    border-radius: var(--radius);\n    place-content: center;\n    width: 20%;\n    font-size: 2rem;\n    display: grid;\n    position: relative;\n    background-color: white;\n}\n\n/*\n  Round the corners for the 4 cells at the very corners of\n  the game board\n*/\n.guess:first-of-type .cell:first-of-type {\n  --radius: 14px 0px 0px 0px;\n}\n.guess:first-of-type .cell:last-of-type {\n  --radius: 0px 14px 0px 0px;\n}\n.guess:last-of-type .cell:last-of-type {\n  --radius: 0px 0px 14px 0px;\n}\n.guess:last-of-type .cell:first-of-type {\n  --radius: 0px 0px 0px 14px;\n}\n\n.cell.correct {\n  background: var(--color-success);\n  border-color: var(--color-success);\n  color: white;\n}\n.cell.incorrect {\n  background: var(--color-gray-500);\n  border-color: var(--color-gray-500);\n  color: white;\n}\n.cell.misplaced {\n  background: var(--color-warning);\n  border-color: var(--color-warning);\n  color: white;\n}\n\n.guess-input-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  height: 6.75rem;\n}\n\n.guess-input-wrapper label {\n  font-size: 1.25rem;\n}\n\n.guess-input-wrapper input {\n    border: 4px solid var(--color-gray-900);\n    outline-offset: 4px;\n    border-radius: 14px;\n    width: 100%;\n    padding: 8px 16px;\n    font-size: 2rem;\n    display: block;\n    color: inherit;\n}\n\n.banner {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 10px;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 32px;\n  text-align: center;\n  animation: slideUp 750ms cubic-bezier(0, 0.72, 0.24, 1.02);\n  border-radius: 4px 4px 0px 0px;\n  will-change: transform;\n}\n\n.happy.banner {\n  background: var(--color-success);\n  color: white;\n}\n.sad.banner {\n  background: var(--color-error);\n  color: white;\n}\n\nbutton.banner-button {\n    background-color: #ffffff24;\n    padding: 12px 20px;\n    border-radius: 50px;\n    margin-top: 10px;\n}\n\n.visually-hidden {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n/*\n  Modal styles\n\n  HACK: I'm doing this in a quick and dirty way.\n  Later in the course, we'll see my preferred way of building\n  modals in React.\n*/\n[data-reach-dialog-content] {\n  position: relative;\n  border-radius: 8px;\n  padding: 24px 32px;\n}\n.modal-close-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 16px;\n  cursor: pointer;\n}\n.modal-title {\n  margin-bottom: 0.5em;\n}\n\n/*\n  Keyframe animations\n*/\n@keyframes slideUp {\n  from {\n    transform: translateY(100%);\n  }\n  to {\n    transform: translateY(0%);\n  }\n}\n\n\n/*\n  Stretch goal styles\n*/\n.keyboard {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.keyboard-row {\n  display: flex;\n  justify-content: center;\n  gap: 4px;\n}\n\n.keyboard .letter {\n  width: 2rem;\n  height: 2rem;\n  border-radius: 4px;\n  display: grid;\n  place-content: center;\n  background: #cfc3ff;\n  font-size: 1rem;\n  font-weight: 600;\n}\n\n.keyboard .letter.correct {\n  background: var(--color-success);\n  color: white;\n}\n.keyboard .letter.incorrect {\n  background: var(--color-gray-500);\n  color: white;\n}\n.keyboard .letter.misplaced {\n  background: var(--color-warning);\n  color: white;\n}"],"names":[],"version":3,"file":"index.4d663569.css.map","sourceRoot":"/__parcel_source_root/"}